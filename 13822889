-- Version Check
local Anticheat_Version = "38c8ecdd043ddac9078c5accdcf51ceca1eda9c33f696b175bb039a73478aa4506afbab775980dbe3400c6dd6a7048cd"

if getscripthash(game:GetService("Players").LocalPlayer.PlayerGui.LoadSaveGUI.LoadSaveClient.LocalScript) ~= Anticheat_Version then
    warn("[SECURITY] Anti Exploit is detected as Updated. Be careful!")
end

-- BypassCounter
local Bypass_Count = 0

-- Remote Deletion Bypass
if game:GetService("ReplicatedStorage").Interaction:FindFirstChild("Ban") then
	for _, v in next, getconnections(game:GetService("ReplicatedStorage").Interaction.Ban.AncestryChanged) do
		if pcall(function()
				v:Disable()
			end) then
			Bypass_Count++
		end
	end
end

-- Destroy Ban Remote
if pcall(function()
		if Bypass_Count == 0 then return end -- prevent ban
		game:GetService("ReplicatedStorage").Interaction.Ban:Destroy()
	end) then
	Bypass_Count++
end

local Anticheat_Env = getsenv(game:GetService("Players").LocalPlayer.PlayerGui.LoadSaveGUI.LoadSaveClient.LocalScript)

hookfunction(Anticheat_Env.ban, function(...)
     if not args[2] then return warn("[SECURITY] Blocked Script: Ban") else return warn("[SECURITY] Blocked Script: Ban with " .. args[2] .. " reason.") end
end)

local __namecall
__namecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
        local args = {...}
	if tostring(...) == 'AddLog' then
		return warn("[SECURITY] Blocked: AddLog")
	end
	if getnamecallmethod() == 'Kick' then
		if not args[2] then return warn("[SECURITY] Blocked Function: Kick()") else return warn("[SECURITY] Blocked Function: Kick() with " .. args[2] .. " reason.") end
	end
	if tostring(...) == 'Ban' then
		if not args[2] then return warn("[SECURITY] Blocked Script: Ban") else return warn("[SECURITY] Blocked Script: Ban with " .. args[2] .. " reason.") end
	end
	return __namecall(...)
end))
